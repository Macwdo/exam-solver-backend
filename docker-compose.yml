services:
  db:
    image: postgres:16.3-alpine
    ports:
      - 5432:5432

    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

    env_file:
      - .env

    volumes:
      - ./.data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2-alpine
    ports:
      - 6379:6379

    volumes:
      - ./.data/redis:/data

    env_file:
      - .env

  minio:
    image: minio/minio:latest
    container_name: ${APP_NAME}_s3
    ports:
      - "9000:9000"
      - "9001:9001"

    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
      MINIO_DEFAULT_BUCKETS: ${AWS_STORAGE_BUCKET_NAME}
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}

    env_file:
      - .env

    command: server /data --address 0.0.0.0:9000 --console-address :9001
    volumes:
      - ./.data/minio:/data

  createbucket:
    container_name: ${APP_NAME}_createbucket
    image: minio/mc:latest
    depends_on:
      - minio

    env_file:
      - .env

    entrypoint: >
      sh -c "
      mc config host add --quiet --api s3v4 minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      mc rb --force minio/${AWS_STORAGE_BUCKET_NAME};
      mc mb --quiet minio/${AWS_STORAGE_BUCKET_NAME};
      "
